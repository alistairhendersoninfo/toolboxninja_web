name: Deploy Documentation Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '_site/**'
      - '.github/workflows/deploy-pages.yml'
  workflow_run:
    workflows: ["Generate Documentation from Remote Repository"]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install dependencies
        run: |
          # Create Gemfile if it doesn't exist
          if [ ! -f Gemfile ]; then
            cat > Gemfile << 'EOF'
source "https://rubygems.org"
gem "github-pages", group: :jekyll_plugins
group :jekyll_plugins do
  gem "jekyll-feed"
  gem "jekyll-sitemap" 
  gem "jekyll-seo-tag"
end
EOF
          fi
          
          bundle install

      - name: Setup Jekyll site
        run: |
          # Create Jekyll config if it doesn't exist
          if [ ! -f _config.yml ]; then
            cat > _config.yml << 'EOF'
title: "🛡️ Toolbox Documentation"
description: "Comprehensive documentation for system administration scripts"
baseurl: ""
url: "https://${{ github.repository_owner }}.github.io"

markdown: kramdown
highlighter: rouge
theme: minima

plugins:
  - jekyll-feed
  - jekyll-sitemap
  - jekyll-seo-tag

kramdown:
  input: GFM
  syntax_highlighter: rouge

exclude:
  - scripts/
  - config/
  - guides/
  - templates/
  - "*.sh"
  - Gemfile
  - Gemfile.lock
EOF
          fi
          
          # Ensure _site directory exists with content
          if [ ! -d "_site" ] || [ -z "$(ls -A _site 2>/dev/null)" ]; then
            echo "⚠️ No _site directory found, using docs/ as source"
            if [ -d "docs" ]; then
              cp -r docs/* . 2>/dev/null || true
            else
              echo "# 🛡️ Toolbox Documentation" > index.md
              echo "Documentation is being generated..." >> index.md
            fi
          else
            # Copy _site contents to root for Jekyll processing
            cp -r _site/* . 2>/dev/null || true
          fi

      - name: Build with Jekyll
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4